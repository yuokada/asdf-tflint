#!/usr/bin/env bash

set -eo pipefail

# make a temporary download directory with a cleanup hook
TMP_DOWNLOAD_DIR="$(mktemp -d -t "asdf_tflint_XXXXXX")"
trap 'rm -rf "${TMP_DOWNLOAD_DIR?}"' EXIT

fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

get_arch() {
  local -r machine="$(uname -m)"
  OVERWRITE_ARCH=${ASDF_HASHICORP_OVERWRITE_ARCH:-"false"}
  if [[ $OVERWRITE_ARCH != "false" ]]; then
    echo "$OVERWRITE_ARCH"
  elif [[ $machine == "arm64" ]] || [[ $machine == "aarch64" ]]; then
    echo "arm64"
  else
    echo "amd64"
  fi
}

get_platform() {
  local -r kernel="$(uname -s)"
  if [[ $OSTYPE == "msys" || $kernel == "CYGWIN"* || $kernel == "MINGW"* ]]; then
    echo windows
  else
    uname | tr '[:upper:]' '[:lower:]'
  fi
}

install_tflint() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local -r arch="$(get_arch)"
  local -r platform="$(get_platform)"

  if [ "${install_type}" != "version" ]
  then
    echo "The asdf-tflint plugin only supports official binary releases."
    exit 1
  fi

  local install_bin_path="${install_path}/bin"
  local download_path="${TMP_DOWNLOAD_DIR}/tflint_tmp.zip"

  # e.g:
  # https://github.com/terraform-linters/tflint/releases/download/v0.6.1/tfupdate_0.6.1_darwin_amd64.zip
  # curl -L -C - https://github.com/terraform-linters/tflint/releases/download/v0.6.1/tflint_darwin_amd64.zip | tar zxf - tfupdate

  echo "âˆ— Downloading and installing tflint..."
  (
    mkdir -p "${install_bin_path}"

    # curl -L -C - "https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_${platform}_${arch}.tar.gz"  | tar zxf - -C "${install_bin_path}" tfupdate
    curl -sL -o "${download_path}" "https://github.com/terraform-linters/tflint/releases/download/v${version}/tflint_${platform}_${arch}.zip"

    # e.g: $ bsdtar zxf tfupdate.zip -C ~/bin
    # e.g: $ bsdtar zxf /var/folders/d9/8bnn6sfj32x6pv14t1k5hflw0000gq/T/asdf_tflint.dJhoyJh7/tfupdate.zip -C ~/bin
    bsdtar zxf "${download_path}" -C "${install_bin_path}"

    echo "The installation was successful!"

  ) || (
    rm -rf "${install_path}"
    fail "An error occurred"
  )
}

install_tflint "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
